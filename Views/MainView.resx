<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnExit.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qU7XA9X/AT1NdK/qXVEOAAAAAElFTkSuQmCC
</value>
  </data>
</root>