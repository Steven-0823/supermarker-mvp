<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnExit.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>